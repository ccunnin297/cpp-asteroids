// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: GameState.proto

#ifndef PROTOBUF_GameState_2eproto__INCLUDED
#define PROTOBUF_GameState_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
class EntityState;
class EntityStateDefaultTypeInternal;
extern EntityStateDefaultTypeInternal _EntityState_default_instance_;
class GameState;
class GameStateDefaultTypeInternal;
extern GameStateDefaultTypeInternal _GameState_default_instance_;
class PositionState;
class PositionStateDefaultTypeInternal;
extern PositionStateDefaultTypeInternal _PositionState_default_instance_;

namespace protobuf_GameState_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_GameState_2eproto

// ===================================================================

class PositionState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:PositionState) */ {
 public:
  PositionState();
  virtual ~PositionState();

  PositionState(const PositionState& from);

  inline PositionState& operator=(const PositionState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PositionState& default_instance();

  static inline const PositionState* internal_default_instance() {
    return reinterpret_cast<const PositionState*>(
               &_PositionState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(PositionState* other);

  // implements Message ----------------------------------------------

  inline PositionState* New() const PROTOBUF_FINAL { return New(NULL); }

  PositionState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const PositionState& from);
  void MergeFrom(const PositionState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(PositionState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional float x = 1;
  bool has_x() const;
  void clear_x();
  static const int kXFieldNumber = 1;
  float x() const;
  void set_x(float value);

  // optional float y = 2;
  bool has_y() const;
  void clear_y();
  static const int kYFieldNumber = 2;
  float y() const;
  void set_y(float value);

  // @@protoc_insertion_point(class_scope:PositionState)
 private:
  void set_has_x();
  void clear_has_x();
  void set_has_y();
  void clear_has_y();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  float x_;
  float y_;
  friend struct protobuf_GameState_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EntityState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:EntityState) */ {
 public:
  EntityState();
  virtual ~EntityState();

  EntityState(const EntityState& from);

  inline EntityState& operator=(const EntityState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const EntityState& default_instance();

  static inline const EntityState* internal_default_instance() {
    return reinterpret_cast<const EntityState*>(
               &_EntityState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(EntityState* other);

  // implements Message ----------------------------------------------

  inline EntityState* New() const PROTOBUF_FINAL { return New(NULL); }

  EntityState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EntityState& from);
  void MergeFrom(const EntityState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EntityState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .PositionState position = 2;
  bool has_position() const;
  void clear_position();
  static const int kPositionFieldNumber = 2;
  const ::PositionState& position() const;
  ::PositionState* mutable_position();
  ::PositionState* release_position();
  void set_allocated_position(::PositionState* position);

  // required int32 id = 1;
  bool has_id() const;
  void clear_id();
  static const int kIdFieldNumber = 1;
  ::google::protobuf::int32 id() const;
  void set_id(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:EntityState)
 private:
  void set_has_id();
  void clear_has_id();
  void set_has_position();
  void clear_has_position();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::PositionState* position_;
  ::google::protobuf::int32 id_;
  friend struct protobuf_GameState_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class GameState : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:GameState) */ {
 public:
  GameState();
  virtual ~GameState();

  GameState(const GameState& from);

  inline GameState& operator=(const GameState& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GameState& default_instance();

  static inline const GameState* internal_default_instance() {
    return reinterpret_cast<const GameState*>(
               &_GameState_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(GameState* other);

  // implements Message ----------------------------------------------

  inline GameState* New() const PROTOBUF_FINAL { return New(NULL); }

  GameState* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const GameState& from);
  void MergeFrom(const GameState& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(GameState* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .EntityState entities = 1;
  int entities_size() const;
  void clear_entities();
  static const int kEntitiesFieldNumber = 1;
  const ::EntityState& entities(int index) const;
  ::EntityState* mutable_entities(int index);
  ::EntityState* add_entities();
  ::google::protobuf::RepeatedPtrField< ::EntityState >*
      mutable_entities();
  const ::google::protobuf::RepeatedPtrField< ::EntityState >&
      entities() const;

  // @@protoc_insertion_point(class_scope:GameState)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::EntityState > entities_;
  friend struct protobuf_GameState_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// PositionState

// optional float x = 1;
inline bool PositionState::has_x() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PositionState::set_has_x() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PositionState::clear_has_x() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PositionState::clear_x() {
  x_ = 0;
  clear_has_x();
}
inline float PositionState::x() const {
  // @@protoc_insertion_point(field_get:PositionState.x)
  return x_;
}
inline void PositionState::set_x(float value) {
  set_has_x();
  x_ = value;
  // @@protoc_insertion_point(field_set:PositionState.x)
}

// optional float y = 2;
inline bool PositionState::has_y() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PositionState::set_has_y() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PositionState::clear_has_y() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PositionState::clear_y() {
  y_ = 0;
  clear_has_y();
}
inline float PositionState::y() const {
  // @@protoc_insertion_point(field_get:PositionState.y)
  return y_;
}
inline void PositionState::set_y(float value) {
  set_has_y();
  y_ = value;
  // @@protoc_insertion_point(field_set:PositionState.y)
}

// -------------------------------------------------------------------

// EntityState

// required int32 id = 1;
inline bool EntityState::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void EntityState::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void EntityState::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void EntityState::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 EntityState::id() const {
  // @@protoc_insertion_point(field_get:EntityState.id)
  return id_;
}
inline void EntityState::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:EntityState.id)
}

// optional .PositionState position = 2;
inline bool EntityState::has_position() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void EntityState::set_has_position() {
  _has_bits_[0] |= 0x00000001u;
}
inline void EntityState::clear_has_position() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void EntityState::clear_position() {
  if (position_ != NULL) position_->::PositionState::Clear();
  clear_has_position();
}
inline const ::PositionState& EntityState::position() const {
  // @@protoc_insertion_point(field_get:EntityState.position)
  return position_ != NULL ? *position_
                         : *::PositionState::internal_default_instance();
}
inline ::PositionState* EntityState::mutable_position() {
  set_has_position();
  if (position_ == NULL) {
    position_ = new ::PositionState;
  }
  // @@protoc_insertion_point(field_mutable:EntityState.position)
  return position_;
}
inline ::PositionState* EntityState::release_position() {
  // @@protoc_insertion_point(field_release:EntityState.position)
  clear_has_position();
  ::PositionState* temp = position_;
  position_ = NULL;
  return temp;
}
inline void EntityState::set_allocated_position(::PositionState* position) {
  delete position_;
  position_ = position;
  if (position) {
    set_has_position();
  } else {
    clear_has_position();
  }
  // @@protoc_insertion_point(field_set_allocated:EntityState.position)
}

// -------------------------------------------------------------------

// GameState

// repeated .EntityState entities = 1;
inline int GameState::entities_size() const {
  return entities_.size();
}
inline void GameState::clear_entities() {
  entities_.Clear();
}
inline const ::EntityState& GameState::entities(int index) const {
  // @@protoc_insertion_point(field_get:GameState.entities)
  return entities_.Get(index);
}
inline ::EntityState* GameState::mutable_entities(int index) {
  // @@protoc_insertion_point(field_mutable:GameState.entities)
  return entities_.Mutable(index);
}
inline ::EntityState* GameState::add_entities() {
  // @@protoc_insertion_point(field_add:GameState.entities)
  return entities_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::EntityState >*
GameState::mutable_entities() {
  // @@protoc_insertion_point(field_mutable_list:GameState.entities)
  return &entities_;
}
inline const ::google::protobuf::RepeatedPtrField< ::EntityState >&
GameState::entities() const {
  // @@protoc_insertion_point(field_list:GameState.entities)
  return entities_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_GameState_2eproto__INCLUDED
